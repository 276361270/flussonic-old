#!/usr/bin/env escript


main(_Options) ->
  Root = filename:join(filename:dirname(escript:script_name()), ".."),
  Files1 = lists:map(fun(Path) ->
    {ok, Bin} = file:read_file(Path),
    {filename:basename(Path), Bin}
  end, [Path || Path <- filelib:wildcard(Root ++ "/apps/*/ebin/*") ++ filelib:wildcard(Root ++ "/deps/*/ebin/*"), Path =/= ".gitignore"]),
  
  Files2 = filelib:fold_files("wwwroot", ".*", true, fun(Path, Acc) -> 
    {ok, Bin} = file:read_file(Path),
    [{Path, Bin}|Acc] 
  end, []),

  {ok, ConfigBin} = file:read_file("priv/sample/flussonic.conf"),
  Files4 = [{"priv/sample/flussonic.conf",ConfigBin}],
  

  % Files = Files1 ++ Files2 ++ Files3,
  % {ok, {"mem", ZipBin}} = zip:create("mem", Files, [memory]),
  % Script = <<"#!/usr/bin/env escript\n%%! -smp enable +K true +A 16 +a 2048 -name flussonic@127.0.0.1 -sasl errlog_type error \n", ZipBin/binary>>,
  % ok = file:write_file("flussonic", Script),
  % os:cmd("chmod u+x flussonic"),
  
  Commercial = ["hls", "playlist", "http_file", "dvr"],
  Beams = case lists:member("full", _Options) of
    true -> Files1;
    false ->
      Removing = [filename:basename(Path) || Path <- 
        lists:flatmap(fun(Path) -> filelib:wildcard(Root ++ "/apps/"++Path++"/ebin/*") end, Commercial)],
      [{Path,Bin} || {Path,Bin} <- Files1, not lists:member(Path, Removing)]
  end,

  {ok, {"mem", ZipBin}} = zip:create("mem", Beams ++ Files2 ++ Files4, [memory]),
  Script = <<"#!/usr/bin/env escript\n%%! -smp enable +K true +A 8 -name flussonic@127.0.0.1 -sasl errlog_type error \n", ZipBin/binary>>,
  ok = file:write_file("flussonic", Script),
  os:cmd("chmod u+x flussonic"),

  % Bench = ["http_bench.beam"],
  % HttpBenchBeams = [{Name,Bin} || {Name,Bin} <- Files1, lists:member(Name, Bench)],
  % {ok, {"mem", HttpBench}} = zip:create("mem", Files1 ++ Files3, [memory]),
  % ok = file:write_file("http_bench", <<"#!/usr/bin/env escript\n%%! -smp enable +K true -sasl errlog_type error \n", HttpBench/binary>>),
  % os:cmd("chmod u+x http_bench"),

  % ok = file:write_file("segmenter", <<"#!/usr/bin/env escript\n%%! -smp enable +K true -sasl errlog_type error \n", HttpBench/binary>>),
  % os:cmd("chmod u+x segmenter"),
  halt(0).
  
  